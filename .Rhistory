dat
dat <- read.csv("t.csv")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select pwgtp1 from dat where AGEP < 50")
sqldf("select unique AGEP from dat")
sqldf("select distinct AGEP from dat")
ulr <- "http://biostat.jhsph.edu/~jleek/contact.html "
htmlCode <- readLines(ulr)
htmlCode
class(htmlCode)
htmlCode[0]
htmlCode[[0]]
close(ulr)
a <- c("1", "2", "3")
a
class(a)
a[1]
a[2]
htmlCode
htmlCode[1]
c <- (html)
content2 <- content(htmlCode, as="text")
ulr
library(httr)
html <- GET(ulr)
content2 <- content(html, as ="text")
?htmlParse
library(XML)
parseHtml <- htmlParse(content2, asText = T)
parseHtml
htmlCode
htmlCode[10]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
read.fwf("getdata_wksst8110.for")
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
x
class(x)
t <- x[4, ]
t
sum(t)
t[1,1]
class(t[1,1])
t
names(t)
class(t)
rowSums(t)
sapply(t, function(x){x[,1]})
sapply(t, function(elt)elt[,1])
sapply(t, 1)
sapply(t, function(x) x + 1)
sapply(t, as.numeric(x))
sapply(t, is.numeric(x))
sapply(t, function(x){is.numeric(x)})
gt <- sapply(t, function(x){is.numeric(x)})
gt
class(gt)
t2 <- t[gt, ]
t2
t
sapply(t, function(x){if (is.numeric(x)){x = x }})
t
split(t)
t[, -1]
sum(t[, -1])
x <- read.fwf("getdata_wksst8110.for",
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
x
head(x)
sum(t$V4)
sum(x$V4)
?sample
data.frame
?data.frame
rm(list = ls())
restData <- read.csv("Restaurants.csv\")
restData <- read.csv("Restaurants.csv")
restData <- read.csv("Restaurants.csv")
restData
restData$nearMe <- restData$neighborhood %in% c("Roland Park", "Homeland")
table(restData$nearMe)
class(restData$zipCode)
restData$zipWrong <- ifelse(restData$zipCode < 0, TRUE, FALSE)
table(restData$zipWrong)
table(restData$zipWrong, restData$zipCode < 0)
quantile(restData$zipCode)
restData$zipGroups <- cut(restData$zipCode, break = quantile(restData$zipCode))
restData$zipGroups <- cut(restData$zipCode, breaks = quantile(restData$zipCode))
table(restData$zipGroups)
library(Hmisc)
install.packages("Hmisc")
install.packages("Hmisc")
library(Hmisc)
restData$zipGroups <- cut2(restData$zipCode, g=4)
table(restData$zipGroups)
install.packages("plyr")
library(plyr)
install.packages("reshape2")
library(reshape2)
install.packages("reshape2")
library(reshape2)
head(mtcars)
InspectSprays
head(InsectSprays)
InsectSprays
head(InsectSprays)
?with
x <- c(rnorm(10), runif(10), rnorm(10,1))
x
runif(10)
count_by_spray <- with(InsectSprays, split(count, spray))
count_by_spray
mean_by_spray <- lapply(count_by_spray, mean)
mean_by_spray
unlist(mean_by_spray)
sapply(count_by_spray, mean)
vapply(count_by_spray, mean, numeric(1))
with(InsectSprays, tapply(count, spray, mean))
with(InsectSprays, by(count, spray, mean))
aggregate(count ~ spray, InsectSprays, mean)
library(plyr)
ddply(InsectSprays, .(spray), summarise, mean.count= mean(count))
rm(list=ls())
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "t.csv")
houseData <- read.csv("t.csv")
head(houseData)
houseData$ACR
class(houseData$ACR)
agricultureLogical <- houseData&ACR == 3
agricultureLogical <- houseData$ACR == 3
agricultureLogical
class(houseData$AGS)
agricultureLogical <- houseData$ACR == 3 && houseData$AGS == 6
head(agricultureLogical[, 1:3])
dim(agricultureLogical)
class(agricultureLogical)
which(agricultureLogical)
?which
div.3 <- m %% 3 == 0
( m <- matrix(1:12, 3, 4) )
div.3 <- m %% 3 == 0
div.3
which(div.3)
( m <- matrix(c(1,2,3,4,5,6,NA, NA, NA), 3, 3) )
div.3 <- m %% 3 == 0
div.3
which(div.3)
g <- complete.cases(houseData)
g
which(g)
agricultureLogical <- houseData$ACR == 3 && houseData$AGS == 6
split(houseData, agricultureLogical)
t <- split(houseData, agricultureLogical)
class(t)
length(t)
t[[0]]
t[0]
t
which(div.3, arr.ind = TRUE)
div.3
which(div.3)
t1 <- houseData[agricultureLogical, ]
head(t1)
t1
nrow(t1)
t1 <- houseData[, houseData$ACR == 3]
t1 <- houseData[houseData$ACR == 3, ]
t1
head(t1)
head(t1$ACR)
rm(list = ls())
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
install.packages("jpeg")
library(jpeg)
download.file(url, destfile = "abc.jpg")
jpeg("getdata_jeff.jpg")
jpgData <- jpeg("getdata_jeff.jpg")
jpgData
img <- readJPEG("getdata_jeff.jpg", native = T)
img <- readJPEG("getdata_jeff.jpg", native = T)
img
dim(img)
class(img)
quantile(img)
img[30, ]
quantile(img[30,])
quantile(img[80,])
quantile(img)
gdp <- read.csv("getdata_data_GDP.csv")
education <- read.csv("getdata_data_EDSTATS_Country.csv")
head(gdp)
head(education)
gdp <- read.csv("getdata_data_GDP.csv", header = F)
gdp
gdp <- read.csv("getdata_data_GDP.csv")
names(gdp)
gdp[1,1]
class(gdp)
gdp$X
install.packages("downloader")
library(downloader)
download("https://raw.githubusercontent.com/thoughtfulbloke/faoexample/master/appleorange.csv", destfile="appleorange.csv")
download("https://raw.githubusercontent.com/thoughtfulbloke/faoexample/master/stability.csv", destfile="stability.csv")
ao <- read.csv("appleorange.csv")
str(ao)
aoraw <- read.csv("appleorange.csv", stringsAsFactors = F, header = F )
str(aoraw)
head(aoraw, 10)
aodata <- aoraw[3:700,]
aodata
names(aodata) <- c("country", "countrynumber", "products", "productnumber", "tonnes", "year")
aodata
names(aodata)
aodata$country
aodata$countrynumber
class(aodata$countrynumber)
aodata$countrynumber <- as.integer(aodata$countrynumber)
fslines <- which(aodata$country == "Food supply quantity (tonnes) (tonnes)")
fslines
aodata <- aodata[(-1 * fslines), ]
aodata
aodata$tonnes
aodata$tonnes <- gsub("\xca", "", aodata$tonnes)
aodata$tonnes
aodata$tonnes <- gsub(", tonnes \\(\\)", "", aodata$tonnes)
aodata$tonnes
aodata$tonnes <- as.numeric(aodata$tonnes)
aodata$year
aodata$year <- 2009
aodata$productnumber
apples <- aodata[aodata$productnumber == 2617, c(1, 2,5)]
apples
names(apples)
names(apples)[3] <- "apples"
names(apples)
apples
oranges <- aodata[aodata$productnumber == 2611, c(2,5)]
oranges
names(oranges)[2] <- "oranges"
oranges
cleanao2 <- merge(apples, oranges, by="countrynumber", all=TRUE)
cleanao2
gpd
gpd
gdp
gdp <- read.csv("getdata_data_GDP.csv", stringAsFactors = F, header = F)
gdp <- read.csv("getdata_data_GDP.csv", stringsAsFactors = F, header = F)
head(gdp)
tail(gdp)
tail(gdp, 20)
tail(gdp, 30)
str(gdp)
head(gdp)
gdp[6,1]
gdp[6,2]
gdp[6,3]
gdp[6,4]
gdp[6,5]
gdp[6,6]
gdp[6,7]
tail(gdp)
tail(gdp, 40)
tail(gdp, 60)
tail(gdp, 100)
gpd[236,1]
gdp[236,1]
gdp <- gdp[6:236, c(1, 2, 4,5)]
head(gdp)
names(gdp) <- c("countryCode", "ranking", "economy", "gdp")
head(gdp)
tail(gdp)
class(gdp$gdp)
gdp$gdp <- as.double(gdp$gdp)
gdp2 <- gdp[!complete.cases(gdp),]
gdp2$gdp
gdp$gdp
gdp$countryCode
gdp <- read.csv("getdata_data_GDP.csv", stringsAsFactors = F, header = F)
gdp <- gdp[6:236, c(1, 2, 4,5)]
names(gdp) <- c("countryCode", "ranking", "economy", "gdp")
gdp$countryCode
gdp$gdp
names(gdp)
gdp2 <- gdp[gdp$countryCode != "", ]
gdp2$countryCode
edu <- read.csv("getdata_data_EDSTATS_Country.csv")
str(edu)
head(edu)
tail(edu)
names(edu)
library(plyr)
gdpEdu <- arrange(join(gdp2, edu), id)
gdpEdu <- arrange(join(gdp2, edu), countryCode)
gdpEdu
class(gdpEdu)
nrow(gdpEdu)
gdpEdu <- arrange(join(gdp2, edu))
mergeData <- merge(gdp2, edu)
mergeData
nrow(mergeData)
?merge
mergeData <- merge(gdp2, edu, by.x = "countryCode", by.y = "CountryCode", all.x = T)
mergeData
nrow(mergeData)
nrow(gdp2)
names(mergeData)
head(gpd2)
head(gdp2)
tail(gpd2)
tail(gdp2)
mergeData <- merge(gdp2, edu, by.x = "countryCode", by.y = "CountryCode")
nrow(mergeData)
gdp
nrow(gdp)
mergeData <- merge(gdp, edu, by.x = "countryCode", by.y = "CountryCode")
nrow(mergeData)
mergeData <- merge(gdp2, edu, by.x = "countryCode", by.y = "CountryCode")
nrow(mergeData)
nrow
nrow(gdp2)
gdp2$countryCode
edu$CountryCode
class(edu$CountryCode)
edu2 <- edu
edu2$CountryCode <- as.character(edu2$CountryCode)
class(edu2$CountryCode)
edu2$CountryCode
mergeData <- merge(gdp2, edu2, by.x = "countryCode", by.y = "CountryCode")
nrow(mergeData)
nrow(edu2)
nrow(gdp2)
gdp2$ranking
gdp2 <- gdp2[gdp2$ranking != "", ]
gdp2
nrow(gdp2)
mergeData <- merge(gdp2, edu2, by.x = "countryCode", by.y = "CountryCode")
nrow(mergeData)
mergeData
head(mergeData)
class(gdp2$ranking)
gdp2ranking <- as.integer(gdp2$ranking)
mergeData <- merge(gdp2, edu2, by.x = "countryCode", by.y = "CountryCode")
names(mergeData)
class(mergeData$ranking)
mergeData$ranking
gdp2$ranking
gdp2$ranking <- as.integer(gdp2$ranking)
mergeData <- merge(gdp2, edu2, by.x = "countryCode", by.y = "CountryCode")
mergeData$ranking
orderData <- mergeData[order(-mergeData$ranking),1]
orderData <- mergeData[order(-mergeData$ranking),]
orderData
orderData[13,]
orderData[13, orderData$Long.Name]
orderData$Long.Name[13]
names(orderData)
orderData[10:20, c(2, 34)]
mergeDdata
load("~/.RData")
mergeDdata
View(mergeData)
mergeData
nrow(mergeData)
mergeData$Income.Group
class(mergeData$Income.Group)
mergeData$Income.Group <- as.character(mergeData$Income.Group)
ave <- mergeData[mergeData$Income.Group == "High income: OECD", ]
ave$gdp
class(ave$gdp)
ave$gdp <- as.numeric(ave$gdp)
ave&gdp
ave$gdp
mergeData <- merge(gdp2, edu2, by.x = "countryCode", by.y = "CountryCode")
gdp2$gdp
gdp2$gdp <- as.double(gdp2$gdp)
gdp$gdp
gdp2$countryCode
gdp2$gdp
gdp$gdp
gdp$ranking
gdp2 <- gdp[gdp$ranking != "",]
gdp2$gdp
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
gdp2$gdp
gdp3 <- gdp2
gdp3$gdp <- gsub(" ", ""), gdp3$gdp)
gdp3$gdp <- gsub(" ", "", gdp3$gdp)
gdp3$gdp
gdp3$gdp <- as.numeric(gdp3$gdp)
gdp3$gdp
gdp3 <- gdp2
gdp3$gdp <- gsub(" ", "", gdp3$gdp)
gdp3$gdp
gdp3[gdp3$gdp == "NA",]
gdp3[1, ]
head(gdp3)
tail(gdp3)
c <- .34
c
class(c)
gdp3$gdp <- gsub(",", ".", gdp3$gdp)
gdp3$gdp
gdp3$gdp <- as.numeric(gdp3$gdp)
gdp3$gdp
gdp3 <- gdp2
gdp3$gdp <- gsub(" ", "", gdp3$gdp)
gdp3$gdp
t <- 1000.000.000
1000.000.000
1.000.000.000
gdp$gdp
gdp <- read.csv("getdata_data_GDP.csv", stringsAsFactors=FALSE, header=FALSE)
gpd2
gdp2
class(gdp2$gdp)
g3 <- gdp2
g3$gdp <- gsub(",([[:digit:]])", "\\1", g3$gdp)
g3$gdp
g3$gdp <- as.numeric(g3$gdp)
g3$gdp
m <- merge(g3, edu, by.x = "countryCode", by.y = "CountryCode")
nrow(m)
m$gdp
m1 <- m[m$Income.Group == "High income: OECD"]
m1 <- m[m$Income.Group == "High income: OECD",]
m1
mean(m1$gdp)
m1[, 1:4]
nrow(m1)
nrow(m)
mean(m1$ranking)
m1$Income.Group
m1$ranking
m1$ranking <- as.integer(m1$ranking)
mean(m1$ranking)
m2 <- m[m$Income.Group == "High income: nonOECD",]
m2$ranking <- as.integer(m2$ranking)
mean(m2$ranking)
m$ranking <- as.integer(m$ranking)
m$ranking
m3 <- cut(m, breaks = quantile(m$ranking))
m3 <- cut(m$Income.Group, breaks = quantile(m$ranking))
library(Hmisc)
rankingGs <- cut2(m$Income.Group, g = 5)
rankingGs <- cut2(m$ranking, g = 5)
rankingGs
table(rankingGs)
table(rankingGs, m$Income.Group)
library(jpeg)
img <- readJPEG("getdata_jeff.jpg", native = T)
img2 <- img
img2
quantile(img2[30,])
house <- read.csv("getdata_data_ss06hid.csv")
class(house$ACR)
class(house$ACS)
class(house$AGS)
agricultureLogical <- (house$ACR == 3) & (house$AGS == 6)
house[agricultureLogical, ]
house[which(agricultureLogical),]
h1 <- house[which(agricultureLogical),]
head(h1)
load("~/.RData")
img
names(img)
class(img)
ans <- quantile(img, probs=c(0.3,0.8))
ans
?quantile
rm(list = ls())
?gsub
grep("[a-z]", letters)
letters
x <- "R Tutorial"
gsub("ut","ot",x)
gsub("[a]", x)
gsub(pattern = "[a]",x = x)
gsub("[a]", letters)
gsub("[a-z]", letters)
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
narrow
notverywide <- aggregate(mpg ~ gear + vs + cyl, data = narrow, max)
notverywide
data(mtcars)
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
library(reshape2)
wide1 <- tidied <- dcast(narrow, cyl + gear ~ vs, max)
wide1 <- tidied <- dcast(narrow, cyl + gear ~ vs, max)
days=365*2;
days=365*2;
date = seq(as.Date("2000-01-01"),length=days,by="day")
year = year(date)
month = month(date)
x1 = cumsum(rnorm(days,0.05))
x2 = cumsum(rnorm(days,0.05))
df1 = data.frame(date, year, month, x1, x2)
setwd("D:/data science/project/datasciencecoursera")
